{
   "swagger":"2.0",
   "info":{
      "description":"The documents for mission public common login api",
      "version":"1.0.0",
      "title":"MP common login api doc",
      "contact":{
         "email":"ling.xue@missionpublic.com"
      },
      "license":{
         "name":"View source at github",
         "url":"https://github.com/mpinc/common-login"
      }
   },
   "host":"localhost:8091",
   "basePath":"/api",
   "tags":[
      {
         "name":"sms",
         "description":"sms service",
         "externalDocs":{
            "description":"send sms",
            "url":"localhost:8091"
         }
      },
      {
         "name":"tokens",
         "description":"token service",
         "externalDocs":{
            "description":"get authentication token by different authentication method, remove authentication ",
            "url":"localhost:8091"
         }
      },
      {
         "name":"passwords",
         "description":"Reset password",
         "externalDocs":{
            "description":"Reset password ",
            "url":"localhost:8091"
         }
      },
      {
         "name":"invite users",
         "description":"Invite user to register",
         "externalDocs":{
            "description":"invite user to register",
            "url":"localhost:8091"
         }
      },
      {
         "name":"users",
         "description":"User Register,add,update and change status",
         "externalDocs":{
            "description":"CRUD of user",
            "url":"localhost:8091"
         }
      },
      {
         "name":"permissions",
         "description":"get,add,update and delete permissions",
         "externalDocs":{
            "description":"CRUD of permissions",
            "url":"localhost:8091"
         }
      },
      {
         "name":"roles",
         "description":"get,add,update and delete roles",
         "externalDocs":{
            "description":"CRUD of roles",
            "url":"localhost:8091"
         }
      },
      {
         "name":"tenants",
         "description":"get,add,update and delete tenants",
         "externalDocs":{
            "description":"CRUD of tenants",
            "url":"localhost:8091"
         }
      }
   ],
   "schemes":[
      "http"
   ],
   "paths":{
      "/auth/tokens":{
         "post":{
            "tags":[
               "tokens"
            ],
            "summary":"get auth token",
            "description":"get auth token by different auth Methods",
            "operationId":"userLogin",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"method can be the value of 1. phonepassword : phone and password are required 2. wechat: wechatId is required 3. token: token is required 4. usernamepassword : userName and password are required 5. emailpassword : email and password are required",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/AuthTokenRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/TokenInfo"
                  }
               },
               "403":{
                  "description":"Not authorized error"
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         },
         "delete":{
            "tags":[
               "tokens"
            ],
            "summary":"delete auth token",
            "description":"delete an auth token",
            "operationId":"userLogout",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"token to be removed",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/RefreshTokenRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessResponse"
                  }
               }
            }
         }
      },
      "/auth/refreshedtokens":{
         "post":{
            "tags":[
               "tokens"
            ],
            "summary":"get a refreshed token, refreshed token has a longer life span",
            "description":"get a refreshed token, refreshed token has a longer life span",
            "operationId":"refreshToken",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"token is a valid and un-expired token",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/RefreshTokenRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/TokenInfo"
                  }
               },
               "403":{
                  "description":"Not authorized error"
               }
            }
         }
      },
      "/passwords":{
         "post":{
            "tags":[
               "passwords"
            ],
            "summary":"user reset password",
            "description":"user reset password",
            "operationId":"resetUserPassword",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":true,
                  "description":"method:1. phone (phone is required)",
                  "schema":{
                     "$ref":"#/definitions/ResetPasswordRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessResponse"
                  }
               },
               "403":{
                  "description":"Not authorized error"
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         }
      },
      "/users/{userId}/passwords":{
         "put":{
            "tags":[
               "users"
            ],
            "summary":"user update password",
            "description":"authenticate user change his password",
            "operationId":"chagneUserPassword",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"path",
                  "name":"userId",
                  "required":true,
                  "type":"integer"
               },
               {
                  "in":"body",
                  "name":"body",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/ChangePasswordRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessResponse"
                  }
               },
               "403":{
                  "description":"Not authorized error"
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         }
      },
      "/users/{userId}/phones":{
         "put":{
            "tags":[
               "users"
            ],
            "summary":"user update phone",
            "description":"authenticate user change his phone",
            "operationId":"chagneUserPhone",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"path",
                  "name":"userId",
                  "required":true,
                  "type":"integer"
               },
               {
                  "in":"body",
                  "name":"body",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/ChangePhoneRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessResponse"
                  }
               },
               "403":{
                  "description":"Not authorized error"
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         }
      },
      "/registeredusers":{
         "post":{
            "tags":[
               "users"
            ],
            "summary":"register a new user",
            "description":"register a new end user, if succeed new access token will be issued",
            "operationId":"registerUser",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"method:1. phonepassword (phone and password are required) 2. emailpassword (email and password are required) 3. wechat (wechatId and name are required)",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/RegisterUserRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Registration succeed or failed",
                  "schema":{
                     "$ref":"#/definitions/TokenInfo"
                  }
               }
            }
         }
      },
      "/invitedusers":{
         "post":{
            "tags":[
               "invite user"
            ],
            "summary":"Invite User to register, create an inactive user and wait user to register and active this user",
            "description":"The phone must be unique.",
            "operationId":"inviteUsers",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"Invite users",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/InvitedUsersRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"create user succeed or failed",
                  "schema":{
                     "$ref":"#/definitions/SuccessResponse"
                  }
               }
            }
         }
      },
      "/invitedusers/phone/{phone}":{
         "get":{
            "tags":[
               "invite user"
            ],
            "summary":"Search invited users by phone ",
            "description":"The phone must be unique.",
            "operationId":"getInviteUsersByPhone",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"path",
                  "name":"phone",
                  "description":"phone no",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"get user information",
                  "schema":{
                     "$ref":"#/definitions/SuccessGetUsersResponse"
                  }
               }
            }
         }
      },
      "/users":{
         "post":{
            "tags":[
               "users"
            ],
            "summary":"Add Users",
            "description":"The username and phone must be unique.",
            "operationId":"createUsers",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"Create users",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/CreateUsersRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"create user succeed or failed",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "users"
            ],
            "summary":"delete Users",
            "description":"Admin user delete users",
            "operationId":"deleteUsers",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/DeleteUsersRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"create user succeed or failed",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               }
            }
         },
         "put":{
            "tags":[
               "users"
            ],
            "summary":"Update Users",
            "description":"Admin user update users",
            "operationId":"updateUsers",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"Update users",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/UpdateUsersRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"update user succeed or failed",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               }
            }
         },
         "get":{
            "tags":[
               "users"
            ],
            "summary":"Get User Info",
            "description":"Get users",
            "operationId":"getUsers",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"query",
                  "name":"userId",
                  "description":"",
                  "required":false,
                  "type":"integer"
               },
               {
                  "in":"query",
                  "name":"username",
                  "description":"",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"name",
                  "description":"user name",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"ssn",
                  "description":"user ssn",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"email",
                  "description":"",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"phone",
                  "description":"",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"wechatId",
                  "description":"",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"bizId",
                  "description":"",
                  "required":false,
                  "type":"integer"
               },
               {
                  "in":"query",
                  "name":"bizName",
                  "description":"",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"att1String",
                  "description":"",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"att2String",
                  "description":"",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"att3String",
                  "description":"",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"start",
                  "in":"query",
                  "description":"start from record default value 0",
                  "required":false,
                  "type":"integer",
                  "format":"integer"
               },
               {
                  "name":"size",
                  "in":"query",
                  "description":"size of records to retrieve default value 1000",
                  "required":false,
                  "type":"integer",
                  "format":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"one or array of user info",
                  "schema":{
                     "$ref":"#/definitions/SuccessGetUsersResponse"
                  }
               }
            }
         }
      },
      "/users/{userId}":{
         "get":{
            "tags":[
               "users"
            ],
            "summary":"Get User Info By ID",
            "description":"get user info by authorized user self",
            "operationId":"getUserById",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"path",
                  "name":"userId",
                  "description":"",
                  "required":true,
                  "type":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"user information",
                  "schema":{
                     "$ref":"#/definitions/UserInfo"
                  }
               }
            }
         },
         "put":{
            "tags":[
               "users"
            ],
            "summary":"update users' info by id",
            "description":"update user info by authorized user self",
            "operationId":"updateUserInfo",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"userId",
                  "in":"path",
                  "description":"",
                  "required":true,
                  "type":"integer"
               },
               {
                  "name":"body",
                  "in":"body",
                  "description":"user info",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/UpdateUserRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful or failed operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessResponse"
                  }
               },
               "403":{
                  "description":"Not Authorized"
               }
            }
         }
      },
      "/userstatus":{
         "post":{
            "tags":[
               "users"
            ],
            "summary":"update users' status",
            "description":"inactive and active users by change user status,0 to inactivate a user, 1 to activate a user",
            "operationId":"updateUserStatus",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"body",
                  "in":"body",
                  "description":"user info",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/UpdateUserStatusRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful or failed operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               },
               "403":{
                  "description":"Not Authorized"
               }
            }
         }
      },
      "/userwechatstatus":{
         "post":{
            "tags":[
               "users"
            ],
            "summary":"update users' wechat status",
            "description":"change users' wechat status,0 inactive wechat user, active wechat user",
            "operationId":"updateUserWechatStatus",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"body",
                  "in":"body",
                  "description":"user info",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/UpdateUserWechatStatusRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful or failed operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               },
               "403":{
                  "description":"Not Authorized"
               }
            }
         }
      },
      "/usertypes":{
         "post":{
            "tags":[
               "users"
            ],
            "summary":"update users' type",
            "description":"change users' type",
            "operationId":"updateUserType",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"body",
                  "in":"body",
                  "description":"user info",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/UpdateUserTypeRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful or failed operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               },
               "403":{
                  "description":"Not Authorized"
               }
            }
         }
      },
      "/biz/{bizId}/users":{
         "post":{
            "tags":[
               "biz users"
            ],
            "summary":"Add Users",
            "description":"The username and phone must be unique.",
            "operationId":"createUsers",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"path",
                  "name":"bizId",
                  "description":"bizId",
                  "type":"integer",
                  "required":true
               },
               {
                  "in":"body",
                  "name":"body",
                  "description":"Create biz users",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/CreateUsersRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"create user succeed or failed",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "biz users"
            ],
            "summary":"delete Users",
            "description":"Admin user delete users",
            "operationId":"deleteUsers",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"path",
                  "name":"bizId",
                  "description":"bizId",
                  "required":true,
                  "type":"integer"
               },
               {
                  "in":"body",
                  "name":"body",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/DeleteUsersRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"create user succeed or failed",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               }
            }
         },
         "put":{
            "tags":[
               "biz users"
            ],
            "summary":"Update Users",
            "description":"Admin user update users",
            "operationId":"updateUsers",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"path",
                  "name":"bizId",
                  "description":"bizId",
                  "required":true,
                  "type":"integer"
               },
               {
                  "in":"body",
                  "name":"body",
                  "description":"Update users",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/UpdateUsersRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"update user succeed or failed",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               }
            }
         },
         "get":{
            "tags":[
               "biz users"
            ],
            "summary":"Get User Info",
            "description":"Get users",
            "operationId":"getUsers",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"path",
                  "name":"bizId",
                  "description":"bizId",
                  "required":true,
                  "type":"integer"
               },
               {
                  "in":"query",
                  "name":"userId",
                  "description":"",
                  "required":false,
                  "type":"integer"
               },
               {
                  "in":"query",
                  "name":"username",
                  "description":"",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"email",
                  "description":"",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"phone",
                  "description":"",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"wechatId",
                  "description":"",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"bizId",
                  "description":"",
                  "required":false,
                  "type":"integer"
               },
               {
                  "in":"query",
                  "name":"name",
                  "description":"user name",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"ssn",
                  "description":"user ssn",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"bizName",
                  "description":"",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"att1String",
                  "description":"",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"att2String",
                  "description":"",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"att3String",
                  "description":"",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"start",
                  "in":"query",
                  "description":"start from record default value 0",
                  "required":false,
                  "type":"integer",
                  "format":"integer"
               },
               {
                  "name":"size",
                  "in":"query",
                  "description":"size of records to retrieve default value 1000",
                  "required":false,
                  "type":"integer",
                  "format":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"one or array of user info",
                  "schema":{
                     "$ref":"#/definitions/SuccessGetUsersResponse"
                  }
               }
            }
         }
      },
      "/biz/{bizId}/userstatus":{
         "post":{
            "tags":[
               "biz users"
            ],
            "summary":"update biz users' status",
            "description":"inactive and active users by change user status,0 to inactivate a user, 1 to activate a user",
            "operationId":"updateBizUserStatus",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"path",
                  "name":"bizId",
                  "description":"bizId",
                  "required":true,
                  "type":"integer"
               },
               {
                  "name":"body",
                  "in":"body",
                  "description":"user info",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/UpdateUserStatusRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful or failed operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               },
               "403":{
                  "description":"Not Authorized"
               }
            }
         }
      },
      "/biz/{bizId}/users/{userId}/roles/{roleId}":{
         "post":{
            "tags":[
               "biz users"
            ],
            "summary":"biz admin assign a role to a biz user",
            "description":"biz admin assign a role to a biz user",
            "operationId":"assignBizUserRoles",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"bizId",
                  "in":"path",
                  "description":"bizId",
                  "type":"integer",
                  "required":true
               },
               {
                  "name":"userId",
                  "in":"path",
                  "description":"userId",
                  "type":"integer",
                  "required":true
               },
               {
                  "name":"roleId",
                  "in":"path",
                  "description":"roleId",
                  "type":"integer",
                  "required":true
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessResponse"
                  }
               },
               "403":{
                  "description":"Not authorized error"
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         }
      },
      "/permissions":{
         "post":{
            "tags":[
               "permissions"
            ],
            "summary":"add permissions",
            "description":"add permissions",
            "operationId":"addPermissions",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"array of permissions",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/AddPermissionsRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               },
               "403":{
                  "description":"Not authorized error"
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         },
         "delete":{
            "tags":[
               "permissions"
            ],
            "summary":"delete permission",
            "description":"delete permissions",
            "operationId":"deletePermissions",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"a permission or an array of permissions",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/DeletePermissionsRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessResponse"
                  }
               }
            }
         },
         "get":{
            "tags":[
               "permissions"
            ],
            "summary":"get permission list",
            "description":"get permissions list",
            "operationId":"get Permissions",
            "produces":[
               "application/json"
            ],
            "parameters":[
            {
                              "name":"name",
                              "in":"query",
                              "description":"name",
                              "required":false,
                              "type":"string"
               },
               {
                  "name":"start",
                  "in":"query",
                  "description":"row count start at",
                  "required":false,
                  "type":"number",
                  "format":"integer"
               },
               {
                  "name":"size",
                  "in":"query",
                  "description":"row count",
                  "required":false,
                  "type":"number",
                  "format":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/GetPermissionsReponse"
                  }
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         },
         "put":{
            "tags":[
               "permissions"
            ],
            "summary":"update permissions",
            "description":"update permissions",
            "operationId":"updatePermissions",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"array of permissions",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/UpdatePermissionsResponse"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               },
               "403":{
                  "description":"Not authorized error"
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         }
      },
      "/roles":{
         "post":{
            "tags":[
               "roles"
            ],
            "summary":"add roles",
            "description":"add roles",
            "operationId":"addRoles",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"array of roles",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/AddRolesRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               },
               "403":{
                  "description":"Not authorized error"
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         },
         "get":{
            "tags":[
               "roles"
            ],
            "summary":"get roles by tenant",
            "description":"get roles by tenant",
            "operationId":"getRoles",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"start",
                  "in":"query",
                  "description":"row count start at",
                  "required":false,
                  "type":"number",
                  "format":"integer"
               },
               {
                  "name":"size",
                  "in":"query",
                  "description":"row count",
                  "required":false,
                  "type":"number",
                  "format":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               },
               "403":{
                  "description":"Not authorized error"
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         },
         "put":{
            "tags":[
               "roles"
            ],
            "summary":"update roles",
            "description":"update roles",
            "operationId":"updateRoles",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"array of roles",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/UpdateRolesRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               },
               "403":{
                  "description":"Not authorized error"
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         },
          "delete":{
                     "tags":[
                        "roles"
                     ],
                     "summary":"delete roles",
                     "description":"delete roles",
                     "operationId":"deleteRoles",
                     "produces":[
                        "application/json"
                     ],
                     "parameters":[
                        {
                           "in":"body",
                           "name":"body",
                           "description":"a role or an array of roles",
                           "required":true,
                           "schema":{
                              "$ref":"#/definitions/DeleteRolesRequest"
                           }
                        }
                     ],
                     "responses":{
                        "200":{
                           "description":"successful operation",
                           "schema":{
                              "$ref":"#/definitions/SuccessResponse"
                           }
                        }
                     }
                  }
      },
      "/users/{userId}/roles":{
         "post":{
            "tags":[
               "roles"
            ],
            "summary":"assign roles to a user",
            "description":"assign roles to a user",
            "operationId":"assignUserRoles",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"userId",
                  "in":"path",
                  "description":"userId",
                  "type":"integer",
                  "required":true
               },
               {
                  "name":"body",
                  "in":"body",
                  "description":"array of role ids",
                  "schema":{
                     "$ref":"#/definitions/AddRolesRelRequest"
                  },
                  "required":true
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessResponse"
                  }
               },
               "403":{
                  "description":"Not authorized error"
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         }
       },
       "/users/{userId}/roles/{roleId}":{
         "delete":{
            "tags":[
               "roles"
            ],
            "summary":"unassign a user role",
            "description":"unassign a user role",
            "operationId":"unassign a role from a user",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"userId",
                  "in":"path",
                  "type":"integer",
                  "description":"user id",
                  "required":true
               },
               {
                  "name":"roleId",
                  "in":"path",
                  "type":"integer",
                  "description":"role id",
                  "required":true
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessResponse"
                  }
               }
            }
         }
      },
      "/user/{userId}/roles":{
         "get":{
            "tags":[
               "roles"
            ],
            "summary":"get roles through userId",
            "description":"get roles through userId",
            "operationId":"getUserRoles",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"userId",
                  "in":"path",
                  "description":"userId",
                  "type":"integer",
                  "required":true
               },
               {
                  "name":"tenant",
                  "in":"query",
                  "description":"tenant",
                  "type":"string",
                  "required":true
               },
               {
                  "name":"start",
                  "in":"query",
                  "description":"row count start at",
                  "required":false,
                  "type":"number",
                  "format":"integer"
               },
               {
                  "name":"size",
                  "in":"query",
                  "description":"row count",
                  "required":false,
                  "type":"number",
                  "format":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               },
               "403":{
                  "description":"Not authorized error"
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         },
         "403":{
            "description":"Not authorized error"
         },
         "409":{
            "description":"Missing request parameters"
         }
      },
      "/roles/{roleId}/permissions":{
         "post":{
            "tags":[
               "roles"
            ],
            "summary":"assign permissions to a role",
            "description":"assign permissions to a role",
            "operationId":"assignRolePermissions",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"roleId",
                  "in":"path",
                  "description":"roleId",
                  "type":"integer",
                  "required":true
               },
               {
                  "name":"body",
                  "in":"body",
                  "description":"array of permission ids",
                  "schema":{
                     "$ref":"#/definitions/AddRolePermissionRequest"
                  },
                  "required":true
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               },
               "403":{
                  "description":"Not authorized error"
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         },
         "delete":{
            "tags":[
               "roles"
            ],
            "summary":"unassign permissions from a role",
            "description":"unassign permission from a role",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"roleId",
                  "in":"path",
                  "type":"integer",
                  "description":"role id",
                  "required":true
               },
               {
                  "name":"body",
                  "in":"body",
                  "schema":{
                     "$ref":"#/definitions/AddRolePermissionRequest"
                  },
                  "description":"array of permissions ids",
                  "required":true
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               }
            }
         },
         "get":{
            "tags":[
               "roles"
            ],
            "summary":"get role's permissions",
            "description":"get role's permissions",
            "operationId":"getRolesPermissions",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"path",
                  "name":"roleId",
                  "description":"role id",
                  "required":true,
                  "type":"integer"
               },
               {
                  "in":"query",
                  "name":"tenant",
                  "description":"tenant",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"start",
                  "in":"query",
                  "description":"row count start at",
                  "required":false,
                  "type":"number",
                  "format":"integer"
               },
               {
                  "name":"size",
                  "in":"query",
                  "description":"row count",
                  "required":false,
                  "type":"number",
                  "format":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               },
               "403":{
                  "description":"Not authorized error"
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         }
      },
      "/tenants":{
        "delete":{
                  "tags":[
                     "tenants"
                  ],
                  "summary":"delete tenants",
                  "description":"delete tenants",
                  "operationId":"deleteTenants",
                  "produces":[
                     "application/json"
                  ],
                  "parameters":[
                     {
                        "in":"body",
                        "name":"body",
                        "description":"array of tenants",
                        "required":true,
                        "schema":{
                           "$ref":"#/definitions/DeleteTenantsRequest"
                        }
                     }
                  ],
                  "responses":{
                     "200":{
                        "description":"successful operation",
                        "schema":{
                           "$ref":"#/definitions/SuccessArrayResponse"
                        }
                     },
                     "403":{
                        "description":"Not authorized error"
                     },
                     "409":{
                        "description":"Missing request parameters"
                     }
                  }
               },
         "post":{
            "tags":[
               "tenants"
            ],
            "summary":"create tenants",
            "description":"create tenants",
            "operationId":"createTenants",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"array of tenants",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/AddTenantsRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               },
               "403":{
                  "description":"Not authorized error"
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         },
         "put":{
                     "tags":[
                        "tenants"
                     ],
                     "summary":"update tenants",
                     "description":"update tenants",
                     "operationId":"updateTenants",
                     "produces":[
                        "application/json"
                     ],
                     "parameters":[
                        {
                           "in":"body",
                           "name":"body",
                           "description":"array of tenants",
                           "required":true,
                           "schema":{
                              "$ref":"#/definitions/UpdateTenantsRequest"
                           }
                        }
                     ],
                     "responses":{
                        "200":{
                           "description":"successful operation",
                           "schema":{
                              "$ref":"#/definitions/SuccessArrayResponse"
                           }
                        },
                        "403":{
                           "description":"Not authorized error"
                        },
                        "409":{
                           "description":"Missing request parameters"
                        }
                     }
                  },
         "get":{
            "tags":[
               "tenants"
            ],
            "summary":"get tenants",
            "description":"get tenants",
            "operationId":"getTenants",
            "produces":[
               "application/json"
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessArrayResponse"
                  }
               },
               "403":{
                  "description":"Not authorized error"
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         }
      },
      "/sms/captcha":{
         "post":{
            "tags":[
               "sms"
            ],
            "summary":"send verification key through sms",
            "description":"send verification key through sms",
            "operationId":"sendSmsCaptcha",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"smsType: 1.registeruser,2.resetpassword 3.changephone",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/SendSmsCaptchaRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessResponse"
                  }
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         }
      },
      "/email/captcha":{
         "post":{
            "tags":[
               "sms"
            ],
            "summary":"send verification email",
            "description":"send verification email",
            "operationId":"sendEamilCaptcha",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"emailType: 1.activateuser,2.resetpassword 3.changeeamil",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/SendEmailCaptchaRequest"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessResponse"
                  }
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         }
      },
      "/email/activateUser/{activateCode}":{
         "get":{
            "tags":[
               "sms"
            ],
            "summary":"activate user by code",
            "description":"activate user by code",
            "operationId":"activateUserByEmail",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"path",
                  "name":"activateCode",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SuccessResponse"
                  }
               },
               "409":{
                  "description":"Missing request parameters"
               }
            }
         }
      }
   },
   "definitions":{
      "SuccessResponse":{
         "type":"object",
         "properties":{
            "success":{
               "type":"boolean"
            },
            "msg":{
               "type":"string"
            },
            "id":{
               "type":"integer"
            }
         }
      },
      "SuccessArrayResponse":{
         "type":"object",
         "properties":{
            "success":{
               "type":"boolean"
            },
            "msg":{
               "type":"string"
            },
            "result":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/SuccessResponse"
               }
            }
         }
      },
      "SuccessGetUsersResponse":{
         "type":"object",
         "properties":{
            "success":{
               "type":"boolean"
            },
            "msg":{
               "type":"string"
            },
            "result":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/UserInfo"
               }
            }
         }
      },
      "ResetPasswordRequest":{
         "type":"object",
         "required":[
            "method",
            "phone",
            "code",
            "password"
         ],
         "properties":{
            "method":{
               "type":"string"
            },
            "phone":{
               "type":"string"
            },
            "password":{
               "type":"string"
            },
            "code":{
               "type":"string"
            }
         }
      },
      "ChangePasswordRequest":{
         "type":"object",
         "required":[
            "oldPassword",
            "newPassword"
         ],
         "properties":{
            "oldPassword":{
               "type":"string"
            },
            "newPassword":{
               "type":"string"
            }
         }
      },
      "ChangePhoneRequest":{
         "type":"object",
         "required":[
            "phone",
            "code"
         ],
         "properties":{
            "phone":{
               "type":"string"
            },
            "code":{
               "type":"string"
            }
         }
      },
      "AuthTokenRequest":{
         "type":"object",
         "required":[
            "method"
         ],
         "properties":{
            "method":{
               "type":"string"
            },
            "phone":{
               "type":"string"
            },
            "email":{
               "type":"string"
            },
            "userName":{
               "type":"string"
            },
            "password":{
               "type":"string",
               "format":"password"
            },
            "wechatId":{
               "type":"string"
            },
            "token":{
               "type":"string"
            }
         }
      },
      "RefreshTokenRequest":{
         "type":"object",
         "required":[
            "token"
         ],
         "properties":{
            "token":{
               "type":"string"
            }
         }
      },
      "TokenInfo":{
         "type":"object",
         "properties":{
            "success":{
               "type":"boolean"
            },
            "result":{
               "type":"object",
               "properties":{
                  "tenant":{
                     "type":"string"
                  },
                  "user":{
                     "type":"object",
                     "properties":{
                        "userId":{
                           "type":"integer"
                        },
                        "name":{
                           "type":"string"
                        },
                        "city":{
                           "type":"string"
                        },
                        "userName":{
                           "type":"string"
                        },
                        "phone":{
                           "type":"string"
                        },
                        "bizId":{
                           "type":"integer"
                        },
                        "type":{
                           "type":"string"
                        }
                     }
                  },
                  "device":{
                     "type":"integer"
                  },
                  "issueAt":{
                     "type":"string",
                     "format":"date-time"
                  },
                  "expireAt":{
                     "type":"string",
                     "format":"date-time"
                  },
                  "accessToken":{
                     "type":"string"
                  }
               }
            }
         }
      },
      "RegisterUserRequest":{
         "type":"object",
         "required":[
            "method"
         ],
         "properties":{
            "method":{
               "type":"string"
            },
            "phone":{
               "type":"string"
            },
            "password":{
               "type":"string",
               "format":"password"
            },
            "code":{
               "type":"string"
            },
            "wechatId":{
               "type":"string"
            },
            "email":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "userName":{
               "type":"string"
            },
            "gender":{
               "type":"integer"
            },
            "avatar":{
               "type":"string"
            },
            "address":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "zipcode":{
               "type":"string"
            },
            "bizId":{
               "type":"integer"
            },
            "bizName":{
               "type":"string"
            },
            "att1String":{
               "type":"string"
            },
            "att2String":{
               "type":"string"
            },
            "att3String":{
               "type":"string"
            },
            "ssn":{
               "type":"string"
            }
         }
      },
      "UpdateUsersRequest":{
         "type":"object",
         "required":[
            "users"
         ],
         "properties":{
            "users":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/UpdateUserRequest"
               }
            }
         }
      },
      "DeleteUsersRequest":{
         "type":"object",
         "required":[
            "users"
         ],
         "properties":{
            "users":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/DeleteUsersRequestItem"
               }
            }
         }
      },
      "CreateUsersRequest":{
         "type":"object",
         "required":[
            "users"
         ],
         "properties":{
            "users":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/CreateUsersRequestItem"
               }
            }
         }
      },
      "DeleteUsersRequestItem":{
         "type":"object",
         "required":[
            "userId"
         ],
         "properties":{
            "userId":{
               "type":"integer"
            }
         }
      },
      "CreateUsersRequestItem":{
         "type":"object",
         "required":[
            "userName",
            "password",
            "userType"
         ],
         "properties":{
            "phone":{
               "type":"string"
            },
            "password":{
               "type":"string",
               "format":"password"
            },
            "wechatId":{
               "type":"string"
            },
            "email":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "userName":{
               "type":"string"
            },
            "gender":{
               "type":"integer"
            },
            "avatar":{
               "type":"string"
            },
            "address":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "zipcode":{
               "type":"string"
            },
            "userType":{
               "type":"string"
            },
            "bizId":{
               "type":"integer"
            },
            "bizName":{
               "type":"string"
            },
            "att1String":{
               "type":"string"
            },
            "att2String":{
               "type":"string"
            },
            "att3String":{
               "type":"string"
            },
            "ssn":{
               "type":"string"
            }
         }
      },
      "UserInfo":{
         "type":"object",
         "properties":{
            "userId":{
               "type":"integer"
            },
            "phone":{
               "type":"string"
            },
            "email":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "userName":{
               "type":"string"
            },
            "gender":{
               "type":"integer"
            },
            "avatar":{
               "type":"string"
            },
            "address":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "zipcode":{
               "type":"string"
            },
            "userType":{
               "type":"string"
            },
            "createdOn":{
               "type":"string",
               "format":"date-time"
            },
            "updatedOn":{
               "type":"string",
               "format":"date-time"
            },
            "bizId":{
               "type":"integer"
            },
            "bizName":{
               "type":"string"
            },
            "att1String":{
               "type":"string"
            },
            "att2String":{
               "type":"string"
            },
            "att3String":{
               "type":"string"
            },
            "ssn":{
               "type":"string"
            }
         }
      },
      "UpdateUserRequest":{
         "type":"object",
         "properties":{
            "userId":{
               "type":"integer"
            },
            "name":{
               "type":"string"
            },
            "gender":{
               "type":"integer"
            },
            "avatar":{
               "type":"string"
            },
            "address":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "zipcode":{
               "type":"string"
            },
            "att1String":{
               "type":"string"
            },
            "att2String":{
               "type":"string"
            },
            "att3String":{
               "type":"string"
            },
            "ssn":{
               "type":"string"
            }
         }
      },
      "UpdateUserStatusRequest":{
         "type":"object",
         "required":[
            "users"
         ],
         "properties":{
            "users":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/UpdateUserStatusRequestItem"
               }
            }
         }
      },
      "UpdateUserStatusRequestItem":{
         "type":"object",
         "properties":{
            "userId":{
               "type":"integer"
            },
            "status":{
               "type":"integer"
            }
         }
      },
      "UpdateUserWechatStatusRequest":{
         "type":"object",
         "required":[
            "users"
         ],
         "properties":{
            "users":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/UpdateUserWechatStatusRequestItem"
               }
            }
         }
      },
      "UpdateUserWechatStatusRequestItem":{
         "type":"object",
         "properties":{
            "userId":{
               "type":"integer"
            },
            "wechatId":{
               "type":"string"
            },
            "wechatStatus":{
               "type":"integer"
            }
         }
      },
      "UpdateUserTypeRequest":{
         "type":"object",
         "required":[
            "users"
         ],
         "properties":{
            "users":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/UpdateUserTypeRequestItem"
               }
            }
         }
      },
      "UpdateUserTypeRequestItem":{
         "type":"object",
         "properties":{
            "userId":{
               "type":"integer"
            },
            "type":{
               "type":"string"
            }
         }
      },
      "UpdatePermissionsResponseItem":{
         "type":"object",
         "required":[
            "tenant",
            "permissionId"
         ],
         "properties":{
            "permissionId":{
               "type":"integer"
            },
            "description":{
               "type":"string"
            }
         }
      },
      "UpdateRolesRequestItem":{
         "type":"object",
         "required":[
            "roleId",
            "name",
            "description"
         ],
         "properties":{
            "roleId":{
               "type":"integer"
            },
            "name":{
               "type":"string"
            },
            "description":{
               "type":"string"
            }
         }
      },
      "AddPermissionsRequestItem":{
         "type":"object",
         "required":[
            "name",
            "description"
         ],
         "properties":{
            "name":{
               "type":"string"
            },
            "description":{
               "type":"string"
            }
         }
      },
      "AddPermissionsRequest":{
         "type":"object",
         "required":[
            "permissions"
         ],
         "properties":{
            "permissions":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/AddPermissionsRequestItem"
               }
            }
         }
      },
      "UpdatePermissionsResponse":{
         "type":"object",
         "required":[
            "tenant"
         ],
         "properties":{
            "permissions":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/UpdatePermissionsResponseItem"
               }
            }
         }
      },
      "DeletePermissionsRequest":{
         "type":"object",
         "required":[
            "permissions"
         ],
         "properties":{
            "permissions":{
               "type":"array",
               "items":{
                  "type":"integer"
               }
            }
         }
      },
      "GetRolesPermissionResponse":{
         "type":"object",
         "required":[
            "permissions"
         ],
         "properties":{
            "permissions":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/GetRolesPermissionsReponseItem"
               }
            }
         }
      },
      "GetPermissionsReponse":{
         "type":"object",
         "required":[
            "permissions"
         ],
         "properties":{
            "permissions":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/GetPermissionsReponseItem"
               }
            }
         }
      },
      "GetTenantsPermissionsReponse":{
         "type":"object",
         "properties":{
            "permissions":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/GetTenantsPermissionsReponseItem"
               }
            }
         }
      },
      "AddRolesRequest":{
         "type":"object",
         "required":[
            "roles"
         ],
         "properties":{
            "roles":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/AddRolesRequestItem"
               }
            }
         }
      },
      "AddRolesRelRequest":{
         "type":"object",
         "required":[
            "roles"
         ],
         "properties":{
            "roles":{
               "type":"array",
               "items":{
                  "type":"integer"
               }
            }
         }
      },
       "AddRolesRequestItem":{
               "type":"object",
               "required":[
                  "name",
                  "description"
               ],
               "properties":{
                  "name":{
                     "type":"string"
                  },
                  "description":{
                     "type":"string"
                  }
               }
            },
      "UpdateRolesRequest":{
         "type":"object",
         "required":[
            "roles"
         ],
         "properties":{
            "roles":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/UpdateRolesRequestItem"
               }
            }
         }
      },
       "DeleteRolesRequest":{
               "type":"object",
               "required":[
                  "roles"
               ],
               "properties":{
                  "roles":{
                     "type":"array",
                     "items":{
                        "type":"integer"
                     }
                  }
               }
            },
      "GetRolesRequest":{
         "type":"object",
         "required":[
            "roles"
         ],
         "properties":{
            "roles":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/GetRolesRequestItem"
               }
            }
         }
      },
      "AddRolePermissionRequest":{
         "type":"object",
         "required":[
            "permissions"
         ],
         "properties":{
            "permissions":{
               "type":"array",
               "items":{
                  "type":"integer"
               }
            }
         }
      },
      "IdItem":{
         "type":"object",
         "properties":{
            "id":{
               "type":"integer"
            }
         }
      },
      "AddTenantsRequestItem":{
         "type":"object",
         "required":[
            "name",
            "description",
            "adminUserName",
            "adminPassword"
         ],
         "properties":{
            "name":{
               "type":"string"
            },
            "description":{
               "type":"string"
            },
            "adminUserName":{
               "type":"string"
            },
            "adminPassword":{
               "type":"string"
            }
         }
      },
      "AddTenantsRequest":{
         "type":"object",
         "required":[
            "tenants"
         ],
         "properties":{
            "tenants":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/AddTenantsRequestItem"
               }
            }
         }
      },
       "UpdateTenantsRequestItem":{
               "type":"object",
               "required":[
                  "name",
                  "description"
               ],
               "properties":{
                  "name":{
                     "type":"string"
                  },
                  "description":{
                     "type":"string"
                  }
               }
            },
            "UpdateTenantsRequest":{
               "type":"object",
               "required":[
                  "tenants"
               ],
               "properties":{
                  "tenants":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/UpdateTenantsRequestItem"
                     }
                  }
               }
            },
      "DeleteTenantsRequestItem":{
                     "type":"object",
                     "required":[
                        "name"
                     ],
                     "properties":{
                        "name":{
                           "type":"string"
                        }
                     }
                  },
                  "DeleteTenantsRequest":{
                     "type":"object",
                     "required":[
                        "tenants"
                     ],
                     "properties":{
                        "tenants":{
                           "type":"array",
                           "items":{
                              "$ref":"#/definitions/DeleteTenantsRequestItem"
                           }
                        }
                     }
                  },
      "GetTenantsRequestItem":{
         "type":"object"
      },
      "GetRolesRequestItem":{
         "type":"object"
      },
      "GetTenantsPermissionsReponseItem":{
         "type":"object"
      },
      "GetPermissionsReponseItem":{
         "type":"object"
      },
      "GetRolesPermissionsReponseItem":{
         "type":"object"
      },
      "GetTenantsRequest":{
         "type":"object",
         "properties":{
            "tenants":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/GetTenantsRequestItem"
               }
            }
         }
      },
      "SendSmsCaptchaRequest":{
         "type":"object",
         "required":[
            "smsType",
            "phone"
         ],
         "properties":{
            "smsType":{
               "type":"string"
            },
            "phone":{
               "type":"string"
            }
         }
      },
      "SendEmailCaptchaRequest":{
         "type":"object",
         "required":[
            "emailType",
            "eamil"
         ],
         "properties":{
            "emailType":{
               "type":"string"
            },
            "email":{
               "type":"string"
            }
         }
      },
      "InvitedUsersRequest":{
         "type":"object",
         "required":[
            "phone"
         ],
         "properties":{
            "phone":{
               "type":"string"
            },
            "email":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "gender":{
               "type":"integer"
            },
            "address":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "zipcode":{
               "type":"string"
            },
            "att1String":{
               "type":"string"
            },
            "att2String":{
               "type":"string"
            },
            "att3String":{
               "type":"string"
            }
         }
      }
   }
}
